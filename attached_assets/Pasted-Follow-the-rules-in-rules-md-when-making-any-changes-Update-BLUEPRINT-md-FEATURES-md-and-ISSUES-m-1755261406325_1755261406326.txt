Follow the rules in rules.md when making any changes. Update BLUEPRINT.md, FEATURES.md, and ISSUES.md as required by the rules. Maintain changelog entries in BLUEPRINT.md for every change.

Goal: Bring Admin calendar UI in line with M1: simplify the top toolbar and add Day Peek. The current header still shows legacy buttons (“Blackout”, “Apply Restrictions”, etc.). This task must:

Remove those actions from the global header,

Replace them with Create ▾ and More ▾,

Add a DayPeekSheet that opens when a day is tapped.

Files (create/update only these):

/app/frontend/src/pages/AdminPage.tsx

/app/frontend/src/pages/DayPeekSheet.tsx (new)

/app/frontend/src/pages/FilterDrawer.tsx (new, skeleton)

Tests: /app/frontend/src/__tests__/admin_ui_m1.spec.tsx

Implementation — do exactly this:

Scan & replace header: In AdminPage.tsx, locate the existing toolbar (search for the strings: "Export CSV", "Apply Template", "Create Slots", "Bulk Create", "Blackout", "Apply Restrictions"). Remove these from the global header.

New header layout:

Left: segmented control Month | Week | Day.

Center: date nav ‹ › | Today | [date picker].

Right: only Create ▾ and More ▾.

Create ▾ menu items (no optionality):

Create Slots (Day) → opens day create dialog (existing or stub) for the focused date

Bulk Create Slots → opens the current bulk range dialog

Apply Template → open existing template dialog (if feature flag enabled)

More ▾ menu items:

Export CSV (existing handler)

Open Filters… → opens FilterDrawer

Help (placeholder)

Add Day Peek: Create /app/frontend/src/pages/DayPeekSheet.tsx with this exact component (keep props stable):

import React from 'react';
export interface DayPeekSummary { remaining:number; booked:number; blackout:boolean; restricted:boolean; }
export interface DayPeekSheetProps {
  dateISO: string;
  summary: DayPeekSummary;
  onCreateDay: () => void;
  onBlackoutDay: () => void;
  onRestrictDay: () => void;
  onOpenEditor: () => void;
  onOpenDayView: () => void;
  onClose?: () => void;
}
const DayPeekSheet: React.FC<DayPeekSheetProps> = ({dateISO, summary, onCreateDay, onBlackoutDay, onRestrictDay, onOpenEditor, onOpenDayView, onClose}) => {
  const d = new Date(dateISO);
  const fmt = d.toLocaleDateString(undefined,{weekday:'short',year:'numeric',month:'short',day:'numeric'});
  return (
    <div role="dialog" aria-label={`Day ${fmt}`} className="fixed inset-x-0 bottom-0 max-h-[80vh] bg-white shadow-2xl rounded-t-2xl p-4 overflow-auto">
      <div className="flex items-center justify-between mb-2">
        <h3 className="text-lg font-semibold">{fmt}</h3>
        <button onClick={onClose} aria-label="Close" className="px-2 py-1 rounded hover:bg-gray-100">Close</button>
      </div>
      <div className="flex gap-2 mb-3 text-sm">
        <span className="px-2 py-1 rounded bg-gray-100">Remaining: {summary.remaining}</span>
        <span className="px-2 py-1 rounded bg-gray-100">Booked: {summary.booked}</span>
        {summary.blackout && <span className="px-2 py-1 rounded bg-red-100">⛔ Blackout</span>}
        {summary.restricted && <span className="px-2 py-1 rounded bg-amber-100">🔒 Restricted</span>}
      </div>
      <div className="grid grid-cols-1 sm:grid-cols-2 gap-2">
        <button onClick={onCreateDay} className="px-3 py-2 rounded bg-black text-white">Create Slots — Day</button>
        <button onClick={onBlackoutDay} className="px-3 py-2 rounded bg-gray-200">Blackout Day</button>
        <button onClick={onRestrictDay} className="px-3 py-2 rounded bg-gray-200">Restrict Day</button>
        <button onClick={onOpenDayView} className="px-3 py-2 rounded bg-gray-50 text-left underline">Open Day view</button>
        <button onClick={onOpenEditor} className="px-3 py-2 rounded bg-gray-50 text-left underline">Edit Day</button>
      </div>
    </div>
  );
};
export default DayPeekSheet;


Wire Day Peek in AdminPage:

Add local state peek: {dateISO:string, summary:DayPeekSummary} | null.

On day cell click in Month/Week view, set peek with basic summary {remaining:0, booked:0, blackout:false, restricted:false} (you may replace with real API later).

Render <DayPeekSheet ... /> when peek is not null.

Hook onCreateDay to open the existing single-day create dialog; onBlackoutDay to the blackout-for-day flow; onOpenDayView to set view='day' & focus date; onOpenEditor to open the right-side Day Editor if present (no-op is fine if not yet implemented).

Filter drawer skeleton: Add /app/frontend/src/pages/FilterDrawer.tsx with a minimal component exporting a drawer that says “Filters (coming soon)” to satisfy the More ▾ → Open Filters… item.

Tests (admin_ui_m1.spec.tsx) — must pass:

Renders a header where only “Create” and “More” are the right-side buttons. Assert that the old header buttons do not exist by text: “Blackout”, “Apply Restrictions”, “Create Slots” (top level), “Bulk Create”.

Simulate a day click → DayPeekSheet appears with the actions “Create Slots — Day”, “Blackout Day”, “Restrict Day”, and links “Open Day view”, “Edit Day”.

Export is present inside “More ▾” (not as a top-level button).

Docs:

BLUEPRINT.md changelog: “UI-M1 applied — header simplified; Day Peek added.”

FEATURES.md: Mark M1 Toolbar cleanup + DayPeek as Implemented only after the test passes.

ISSUES.md: Add a short note “Legacy header replaced on AdminPage; Day Peek wired.”

Acceptance (no partial credit):

The global header shows at most two right-side buttons: Create ▾ and More ▾.

“Blackout” and “Apply Restrictions” are not in the global header.

Clicking any day opens DayPeekSheet with the specified actions.

Tests pass.