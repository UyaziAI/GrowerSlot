Add site-wide structured logging & diagnostics (dev-friendly, prod-safe)

Issue
Errors are hard to pinpoint during testing. We need high-signal, structured logs across the app that are easy to see in dev and minimal in prod.

Intended outcomes

Frontend logger with levels (debug/info/warn/error/fatal) outputs structured JSON to the console in dev (high signal), with standard fields: timestamp, level, event, message, ctx (small object).

Network failures log a single compact line per failure (method, path, status, duration, requestId, no secrets).

Global capture wired: React Error Boundary, window.onerror, unhandledrejection, and React Query onError all route to the logger.

Ring buffer (≈200 entries) + flag-gated debug overlay to view/filter/export recent logs while testing; disabled by default in prod via VITE_FEATURE_DEBUG_LOGS.

Backend emits structured JSON per request with request_id, method, path, status, duration_ms, and (if applicable) auth_reason/error_class; responses include X-Request-ID.

Correlation: frontend attaches/propagates requestId so a client error can be matched to the server log line.

Sampling/redaction: 100% for warn/error, low for info; never log tokens, cookies, or PII.

Tripwire tests: after login and navigating Admin, fail if any client log contains a missing-auth event or if the server records a 401 on Admin routes.

Constraints & guardrails

Smallest safe diff; no UI redesign; no new endpoints.

/v1 APIs only; respect feature flags; no fabricated data.

Preserve existing verbatim server messages for 4xx/409 in the UI.

Prod defaults: VITE_FEATURE_DEBUG_LOGS=false, backend log level ≥ warn; debug/info paths are no-ops or pruned in prod builds.

Definition of Done

In dev, console shows structured JSON logs for errors and key events; the debug overlay (when flag = true) lists recent logs with search/export.

Backend logs show one JSON line per request with request_id; responses carry X-Request-ID; a client error log and server log share the same ID.

For a deliberate failure, exactly one concise client log and one server log appear (no duplicates, no secrets).

Tripwire tests pass (no missing-auth events or Admin 401s post-login); forcing a missing header makes the test fail with a clear message.

Docs updated: add a Logging & Diagnostics section in BLUEPRINT.md (fields, correlation, sampling, flags), an Unreleased entry in CHANGELOG.md, and update FEATURES.md/ISSUES.md as needed.

Follow the rules in rules.md when making any changes. Update all relevant documentation (BLUEPRINT.md, FEATURES.md, ISSUES.md, CHANGELOG.md) as required by the rules. Maintain changelog entries in CHANGELOG.md (and Blueprint’s Delta) for every change.