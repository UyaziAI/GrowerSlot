Follow the rules in rules.md when making any changes. Update all relevant documentation (BLUEPRINT.md, FEATURES.md, ISSUES.md) as required by the rules. Maintain changelog entries in BLUEPRINT.md for every change.

Goal

Replace the fixed “7‑day” scroller with a continuous, inertial, horizontally scrollable day strip (large touchable pills) and keep the animated Day Detail below.

Keep only: Today and Jump to date (mini‑month popover).

Remove: Prev/Next week buttons.

URL state remains ?date=YYYY-MM-DD only.

Scope & files

Frontend: /app/frontend/src/features/booking/

Update/replace:

CalendarPage.tsx (header actions + layout)

components/WeekScroller.tsx → components/DayTimeline.tsx (continuous scroller)

components/DayPill.tsx (larger, chip style)

Keep MiniMonthPopover.tsx and DayView (detail)

Add dependency: @tanstack/react-virtual for horizontal virtualization (if not already installed).

Animations: use existing Framer Motion setup.

Functional requirements

Continuous DayTimeline (virtualized)

Virtualize days horizontally using @tanstack/react-virtual.

Render an elastic range (e.g., selectedDate - 180d to +540d) and extend when user nears ends.

Inertial swipe with scroll-snap:


overflow-x: auto; scroll-snap-type: x mandatory;
-webkit-overflow-scrolling: touch; overscroll-behavior-x: contain;


Each pill:

scroll-snap-align: center;


Snap-to-center selection: on scrollend (or debounced scroll), compute item closest to container center and set as selectedDate.

Large DayPills (touch-first)

Minimum 48px touch target, generous padding, chip appearance (no tight boxes).

Content: weekday short (SUN), date (17), availability badge (Green ≥50%, Amber 20–49%, Red <20%, Grey none/blackout).

Selected pill has accent ring and slight scale via Framer Motion.

Header actions

Today: sets selectedDate to now, recenters the DayTimeline, updates URL.

Jump to date: opens MiniMonthPopover; selecting a date sets URL and centers that pill.

Remove Prev/Next buttons entirely.

State & routing

Source of truth: selectedDate from URL ?date=YYYY-MM-DD.

Hydrate on mount; push/replace URL on change (no full navigation).

Preserve any existing filters (e.g., grower/cultivar) in URL when updating date.

Data fetching & performance

Aggregates for pills: fetch by paged windows (e.g., 30‑day chunks) and cache by month or YYYY‑MM key.

Day detail: fetch on selection; prefetch neighbors (−1, +1).

Keep requests under control: debounce scroll updates and avoid refetching when data is cached.

Day Detail (unchanged behavior, better transition)

On selectedDate change, animate DayView with a short slide/fade (150–200ms, ease‑out).

Booking actions unchanged.

Accessibility

Pills are <button> with aria-pressed for selected and descriptive aria-label (date + availability).

Timeline supports keyboard (←/→ moves focus/selection; Enter confirms).

Popover is a focus‑trapped dialog; ESC closes.

Implementation notes (key snippets)

Nearest‑to‑center detection (pseudo‑code inside DayTimeline):

const onScrollEnd = () => {
  const mid = container.scrollLeft + container.clientWidth / 2;
  const nearest = items.reduce((best, item) =>
    Math.abs(item.centerX - mid) < Math.abs(best.centerX - mid) ? item : best
  );
  if (nearest.date !== selectedDate) setSelectedDate(nearest.date);
};


Programmatic center on select:

const centerItem = (idx:number) => {
  const offset = virtualizer.getOffsetForIndex(idx) - (container.clientWidth - itemWidth)/2;
  container.scrollTo({ left: offset, behavior: 'smooth' });
};

Tests

Unit

Date window math & virtualization index ↔ date mapping.

Color thresholds for availability.

Integration

URL ↔ selectedDate hydration and back/forward navigation.

Today recenters correctly.

Jump to date recenters and loads detail.

Scroll‑end selects nearest pill (no oscillation).

E2E (mobile viewport)

Fast flick → smooth deceleration → snap to a day.

Performance: no layout jank when scrolling long ranges.

Booking flow still completes from Day Detail.

Cleanup

Remove old week‑pager code and any Prev/Next UI.

Ensure .env.example has no now‑unused flags related to week paging.

Documentation updates

BLUEPRINT.md: Update Frontend Plan to specify single‑screen “Continuous DayTimeline + Day Detail”, URL param date only, inertial swipe + snap selection, and virtualization strategy. Add changelog entry.

FEATURES.md: Mark “Week Overview (single‑screen + infinite scroller + mini‑month jump)” as implemented/updated; record verification method.

ISSUES.md: Add any follow‑ups (e.g., performance tuning thresholds, month‑aggregate API endpoint).

Acceptance criteria

Header shows only Today and Jump to date.

Day pills are large, touch‑friendly, and continuously scrollable far into the future/past with snap‑to‑center.

The nearest pill after scroll becomes the selected date; Day Detail animates to that date.

URL state uses only ?date=YYYY-MM-DD and restores correctly.

No jank on mobile; virtualization keeps memory/CPU low.

All new/updated tests pass; docs updated per rules.md.