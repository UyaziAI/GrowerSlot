Do not modify any files. Do not create commits.
Produce a detailed diagnostic report on the DayTimeline behavior and why the app fails to (a) load & center today on initial page load, (b) center & open on Today click, and (c) center & open on Jump to date selection.

Scope to inspect (read‑only)

/app/frontend/src/features/booking/CalendarPage.tsx

/app/frontend/src/features/booking/components/DayTimeline.tsx

/app/frontend/src/features/booking/components/DayPill.tsx

/app/frontend/src/features/booking/components/MiniMonthPopover.tsx

Any helpers for date/index mapping, timezone, URL parsing, and virtualization.

What to include in the report

State model

Where focusedDate vs selectedDate are defined and updated; list all update call sites with file:line.

Initial load logic

Exact code path that sets initial focusedDate/selectedDate, parses ?date=, derives tenant TZ, and calls centerOnDate. Note any useEffect/rAF timing that could prevent centering.

Date/index mapping

Current EPOCH, indexFromDate, dateFromIndex implementations (paste snippets with line numbers). Confirm TZ normalization (.tz(...).startOf('day')) at all call sites.

Centering API & virtualization

Implementation of centerOnDate and how/when virtualizer.measure() and getOffsetForIndex are invoked. Identify race conditions (e.g., called before mount/measurement).

Today handler

Paste the handler; show whether it sets both focusedDate & selectedDate, updates URL, and awaits measurement before calling centerOnDate.

Jump‑to‑date handler

Same analysis as Today; confirm it closes the popover, updates URL, and centers correctly.

Scroll behavior

Confirm no code still sets selectedDate on scroll end. Show current scrollend/debounce logic that updates only focusedDate.

CSS/Axis lock

The exact className/CSS applied to the scroller container and pills (to verify overflow-y-hidden, touch-pan-x, snap-x, fixed height).

Repro steps with console traces

Run the app and capture console logs for: initial mount → center call, Today click → center call, Jump selection → center call. Include timestamps and the computed index/offsets.

Root cause hypotheses

Pinpoint the most likely failing point(s) (e.g., measurement not ready, wrong TZ, stale ref, incorrect index, smooth scroll cancelled).

Provide a minimal patch outline (code snippets) but do not apply.

Output format

A single Markdown report with sections 1–10, code excerpts with file:line ranges, and a final “Most Likely Fix” summary (one paragraph).

Again: no code changes.