Follow the rules in rules.md. Update BLUEPRINT.md changelog with one line: “Fix: /admin renders AdminPage (not Grower).”
Goal: Ensure /admin renders a distinct Admin page, not the Grower view. Remove any alias/exports that point Admin → Grower.

Do exactly this:

Kill bad aliases: In /app/frontend/src/pages/**/index.ts and any barrels, remove any line that exports AdminPage from a Grower file (e.g., export { default as AdminPage } from './GrowerTimeline'). Keep only export { default as AdminPage } from './AdminPage'.

Router import: In your router (/app/frontend/src/App.tsx or routes.tsx), import Admin strictly:

import AdminPage from './pages/AdminPage';


And define:

<Route path="/admin" element={<AdminPage />} />


Remove any other /admin routes.

Overwrite /app/frontend/src/pages/AdminPage.tsx with this admin-only scaffold (no Grower imports):

import React, { useState } from 'react';
export default function AdminPage() {
  const [view, setView] = useState<'month'|'week'|'day'>('month');
  return (
    <div>
      <header className="flex items-center justify-between p-3 border-b">
        <div className="flex gap-2">
          <button onClick={()=>setView('month')}>Month</button>
          <button onClick={()=>setView('week')}>Week</button>
          <button onClick={()=>setView('day')}>Day</button>
        </div>
        <div className="flex items-center gap-2">
          <button data-testid="admin-header-create">Create ▾</button>
          <button data-testid="admin-header-more">More ▾</button>
        </div>
      </header>
      <main className="p-3">
        <h1 className="text-xl font-semibold">Admin Calendar</h1>
        <div data-testid="admin-calendar-grid" className="mt-3 border rounded p-6">
          {/* Admin calendar grid goes here (no Grower components) */}
        </div>
      </main>
    </div>
  );
}


Important: This file must not import anything from features/booking, GrowerTimeline, or other Grower files.

Test (prevents regression): Create /app/frontend/src/__tests__/admin_not_grower.spec.tsx with:

import { describe, it, expect } from 'vitest';
import { MemoryRouter, Routes, Route } from 'react-router-dom';
import { render, screen, queryAllByText } from '@testing-library/react';
import AdminPage from '../pages/AdminPage';
describe('/admin renders Admin (not Grower)', () => {
  it('shows Admin header & grid and no grower booking controls', () => {
    render(
      <MemoryRouter initialEntries={['/admin']}>
        <Routes><Route path="/admin" element={<AdminPage/>} /></Routes>
      </MemoryRouter>
    );
    expect(screen.getByTestId('admin-header-create')).toBeInTheDocument();
    expect(screen.getByTestId('admin-header-more')).toBeInTheDocument();
    expect(screen.getByTestId('admin-calendar-grid')).toBeInTheDocument();
    // sanity: grower-only affordances should NOT be in the page shell
    expect(screen.queryByText(/Book/i)).toBeNull();
    expect(screen.queryByText(/Next available/i)).toBeNull();
  });
});


Acceptance:

Only one /admin route exists and it renders AdminPage.

The page shows “Admin Calendar” with Create ▾ and More ▾ buttons (data-testids present).

Test admin_not_grower.spec.tsx passes; no “Book”/“Next available” Grower UI appears.