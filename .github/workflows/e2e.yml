name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: grower_slot_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Node.js dependencies
        run: npm ci

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install asyncpg psycopg2-binary python-dotenv

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Setup environment variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/grower_slot_test" >> $GITHUB_ENV
          echo "NODE_ENV=test" >> $GITHUB_ENV
          echo "JWT_SECRET=test-secret-key-for-ci" >> $GITHUB_ENV
          echo "PGHOST=localhost" >> $GITHUB_ENV
          echo "PGPORT=5432" >> $GITHUB_ENV
          echo "PGUSER=postgres" >> $GITHUB_ENV
          echo "PGPASSWORD=postgres" >> $GITHUB_ENV
          echo "PGDATABASE=grower_slot_test" >> $GITHUB_ENV

      - name: Wait for PostgreSQL to be ready
        run: |
          timeout 30 bash -c 'until pg_isready -h localhost -p 5432 -U postgres; do sleep 1; done'

      - name: Run database migrations
        run: |
          chmod +x ./app/infra/run_migrations.sh
          ./app/infra/run_migrations.sh

      - name: Seed test data
        run: |
          python ./app/infra/seed_test_data.py

      - name: Start application
        run: |
          npm run dev &
          APP_PID=$!
          echo "App started with PID: $APP_PID"
          sleep 15
          curl -f http://localhost:5000/v1/health || exit 1
          echo $APP_PID > app.pid
        env:
          NODE_ENV: test

      - name: Run E2E tests
        run: npx playwright test
        env:
          CI: true

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: test-results/**/screenshot*.png
          retention-days: 7

      - name: Upload videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: videos
          path: test-results/**/video*.webm
          retention-days: 7